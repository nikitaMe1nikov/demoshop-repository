type Query {
  me: User!
}

type Mutation {
  signup(userSignupInput: UserSignupInput!): User!
  login(userLoginInput: UserLoginInput!): User
  logout: Boolean
  saveProfile(userInfoInput: UserInfoInput): User!
}

type User {
  id: ID!
  email: String!
  name: String!
  surname: String!
  roles: [UserRole!]!
  favorites: [Product]
  activeOrders: [Order!]!
}

input UserSignupInput {
  email: String! @constraint(format: "email")
  password: String! @constraint(minLength: 8)
  name: String! @constraint(minLength: 4, maxLength: 40)
  surname: String @constraint(minLength: 0, maxLength: 40)
}

input UserLoginInput {
  email: String! @constraint(format: "email")
  password: String! @constraint(minLength: 8)
}

input UserInfoInput {
  email: String! @constraint(format: "email")
  name: String! @constraint(minLength: 4, maxLength: 40)
  surname: String @constraint(minLength: 0, maxLength: 40)
}
