type Query {
  products(categoryID: String!, sort: ProductsSort = PriceASC, first: Int = 30, after: Int = 0): Products!
  favorites: [Product!]!
  product(id: String): Product!
}

type Mutation {
  addFavorite(id: String): Product!
  removeFavorite(id: String): Product!
}

type Products {
  nodes: [Product!]!
  total: Int!
  endCursor: Int!
  hasNextPage: Boolean!
}

type Product {
  id: ID!
  name: String!
  price: Int!
  category: Category!
  favorite: Boolean!
  description: String
  recomendations: [Product!]
}

enum ProductsSort {
  PriceASC
  PriceDSC
}